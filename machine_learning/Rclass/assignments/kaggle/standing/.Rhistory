a = 1
a
a <- 23
a
a+2
a; a+2
install.packages("httr")
library(httr)
install.packages("xml")
install.packages("XML")
install.packages("XML")
library("httr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
install.packages("XML")
install.packages("XML")
library("XML", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
url <- 'https://twitter.com/search?q=donald+trump+twitter&ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Esearch'
xmlpage <- htmlParse(rawToChar(GET(url)$content))
xmlpage
length(capture.output(xmlpage))
capture.output(xmlpage)[1:4]
searchfor <- //p[class="TweetTextSize  js-tweet-text tweet-text" lang="en" data-aria-label-part="0">]
searchfor <- "//p[class="TweetTextSize  js-tweet-text tweet-text" lang="en" data-aria-label-part="0">]""
searchfor <- '//p[class="TweetTextSize  js-tweet-text tweet-text" lang="en" data-aria-label-part="0">]'
tweet <- xpathSApply(xmlpage, searchfor, xmlValue)
searchfor <- '//p[class="TweetTextSize  js-tweet-text tweet-text"]'
tweet <- xpathSApply(xmlpage, searchfor, xmlValue)
searchfor <- '//p[@class="TweetTextSize  js-tweet-text tweet-text"]'
tweet <- xpathSApply(xmlpage, searchfor, xmlValue)
tweet
capture.output(xmlpage)[1:4]
searchfor <- '//p[@class="TweetTextSize  js-tweet-text tweet-text"]'
tweet <- xpathSApply(xmlpage, searchfor, xmlValue)
searchfor <- '//p[@class="TweetTextSize  js-tweet-text tweet-text "]'
tweet <- xpathSApply(xmlpage, searchfor, xmlValue)
tweet
searchfor <- '//p[@class="TweetTextSize  js-tweet-text tweet-text"]'
tweet <- xpathSApply(xmlpage, searchfor, xmlValue)
searchfor <- "//p[@class='TweetTextSize  js-tweet-text tweet-text'']"
tweet <- xpathSApply(xmlpage, searchfor, xmlValue)
searchfor <- "//p[@class='TweetTextSize  js-tweet-text tweet-text']"
tweet <- xpathSApply(xmlpage, searchfor, xmlValue)
tweet
searchfor <- "//p"
tweet <- xpathSApply(xmlpage, searchfor, xmlValue)
tweet
url <- 'https://twitter.com/realDonaldTrump'
xmlpage <- htmlParse(rawToChar(GET(url)$content))
length(capture.output(xmlpage))
capture.output(xmlpage)[1:4]
#Now let's try to get just the tweets.
searchfor <- "//p[@class='TweetTextSize  js-tweet-text tweet-text']"
tweet <- xpathSApply(xmlpage, searchfor, xmlValue)
url <- 'https://twitter.com/realDonaldTrump?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor'
xmlpage <- htmlParse(rawToChar(GET(url)$content))
length(capture.output(xmlpage))
capture.output(xmlpage)[1:4]
#Now let's try to get just the tweets.
searchfor <- '//p[@class="TweetTextSize TweetTextSize--normal js-tweet-text tweet-text"]'
tweet <- xpathSApply(xmlpage, searchfor, xmlValue)
length(tweet)
tweet[1]
tweet[2]
tweet[3]
tweet[4]
tweet[5]
tail(tweet[5])
tail(tweet[5][100:])
tweet[5][100:]
tweet[5]
searchfor2 <- '//strong[@class="fullname show-popup-with-id u-textTruncate "]'
author <- xpathSApply(xmlpage, searchfor, xmlValue)
author
searchfor2 <- '//strong[@class="fullname show-popup-with-id u-textTruncate "]'
author <- xpathSApply(xmlpage, searchfor2, xmlValue)
author
library("dplyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
#Practice basic linear modelling in R on the mtcars dataset.
mtcars
#Practice basic linear modelling in R on the mtcars dataset.
data(mtcars)
glimpse(mtcars)
car_mod <- lm(mpg ~ wt, data=mtcars)
car_mod$coefficients
summary(car_mod)
source('~/Desktop/ML/Rclass/Assignments/Lesson6 - Linear Regression.R', echo=TRUE)
source('~/Desktop/ML/Rclass/Assignments/Lesson6 - Linear Regression.R', echo=TRUE)
source('~/Desktop/ML/Rclass/Assignments/Lesson6 - Linear Regression.R', echo=TRUE)
source('~/Desktop/ML/Rclass/Assignments/Lesson6 - Linear Regression.R', echo=TRUE)
source('~/Desktop/ML/Rclass/Assignments/Lesson6 - Linear Regression.R', echo=TRUE)
source('~/Desktop/ML/Rclass/Assignments/Lesson6 - Linear Regression.R', echo=TRUE)
glimpse(mtcars)
#Improve the model by adding a second variable.
car_mod2 <- lm(mpg ~cyl, data=mtcars)
#Improve the model by adding a second variable.
car_mod2 <- lm(mpg~cyl+wt, data=mtcars)
summar(car_mod2)
summary(car_mod2)
summary(car_mod)
summary(car_mod2)
summary(car_mod)
summary(car_mod2)
#Improve the model by adding a second variable.
car_mod2 <- lm(mpg~factor(cyl)+wt, data=mtcars)
summary(car_mod2)
#Improve the model by adding a second variable.
car_mod2 <- lm(mpg~factor(cyl)+wt, data=mtcars)
summary(car_mod2)
#Improve the model by adding a second variable.
car_mod2 <- lm(mpg~cyl+wt, data=mtcars)
summary(car_mod2)
glimpse(mtcars)
car_mod <- lm(mpg ~ wt, data=mtcars)
summary(car_mod)
glimpse(mtcars)
car_mod <- lm(mpg ~ disp, data=mtcars)
summary(car_mod)
car_mod <- lm(mpg ~ cyl, data=mtcars)
summary(car_mod)
car_mod <- lm(mpg ~ wt, data=mtcars)
summary(car_mod)
glimpse(mtcars)
car_mod <- lm(mpg ~ gear, data=mtcars)
summary(car_mod)
car_mod <- lm(mpg ~ gear, data=mtcars)
summary(car_mod)
glimpse(mtcars)
car_mod <- lm(mpg ~ hp, data=mtcars)
summary(car_mod)
car_mod <- lm(mpg ~ wt, data=mtcars)
car_mod <- lm(mpg ~ cyl, data=mtcars)
car_mod <- lm(mpg ~ cyl, data=mtcars)
summary(car_mod)
car_mod <- lm(mpg ~ factor(cyl), data=mtcars)
summary(car_mod)
#Improve the model by adding a second variable.
car_mod2 <- lm(mpg~factor(cyl)+wt, data=mtcars)
summary(car_mod2)
glimpse(mtcars)
#Improve the model by adding a second variable.
car_mod2 <- lm(mpg~factor(cyl)+wt, data=mtcars)
summary(car_mod2)
#Improve the model by adding a second variable.
car_mod2 <- lm(mpg~factor(cyl)+wt+hp+am, data=mtcars)
summary(car_mod2)
glimpse(mtcars)
#Improve the model by adding additional variables.
car_mod2 <- lm(mpg~factor(cyl)+wt, data=mtcars)
summary(car_mod2)
install.packages("glimnet")
install.packages("caret")
source('~/Desktop/ML/Rclass/Assignments/kaggle/standing/kaggle.R', echo=TRUE)
version
